name: C++ Compatibility Test
inputs:
  working-directory:
    required: true
  hazelcast-version:
    required: true
  client-version:
    required: true
  hazelcast-enterprise-key:
    required: false
runs:
  using: "composite"
  steps:
    - name: Read Java Config
      shell: bash
      run: cat ${GITHUB_WORKSPACE}/.github/java-config.env >> ${GITHUB_ENV}

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}

    - name: Install Necessary Packages
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y net-tools libssl-dev gdb

    - name: Install Boost
      shell: bash
      run: |
        sudo ./scripts/install-boost.sh 1.76.0
      working-directory: ${{ inputs.working-directory }}
        
    - name: Install Thrift
      shell: bash
      run: |
        sudo ./scripts/install-thrift.sh 0.13.0
      working-directory: ${{ inputs.working-directory }}

    # https://github.com/madhead/semver-utils/releases/tag/v4.3.0
    - uses: madhead/semver-utils@36d1e0ed361bd7b4b77665de8093092eaeabe6ba
      id: client-version
      with:
        version: ${{ inputs.client-version }}
        compare-to: 5.2.0

    - name: Determine if test with OpenSSL
      id: with-openssl
      shell: bash
      run: |
        if [[ "${{ steps.client-version.outputs.comparison-result }}" = "<" ]]; then
          # Workaround lack of https://github.com/hazelcast/hazelcast-cpp-client/pull/1098
          echo "WITH_OPENSSL=OFF" >> ${GITHUB_OUTPUT}
        else
          echo "WITH_OPENSSL=ON" >> ${GITHUB_OUTPUT}
        fi

    - name: Build & Install
      shell: bash
      env:
        BUILD_DIR: build
      run: |
        ./scripts/build-unix.sh                                           \
            -DCMAKE_BUILD_TYPE=Debug                                      \
            -DBUILD_SHARED_LIBS=ON                                        \
            -DWITH_OPENSSL=${{ steps.with-openssl.outputs.WITH_OPENSSL }} \
            -DBUILD_TESTS=ON                                              \
            -DBUILD_EXAMPLES=OFF
      working-directory: ${{ inputs.working-directory }}

    - name: Test
      shell: bash
      env:
        BUILD_DIR: build
        HAZELCAST_ENTERPRISE_KEY: ${{ inputs.hazelcast-enterprise-key }}
        GTEST_FILTER: -*Aws*:*DescribeInstancesTest*
        HZ_VERSION: ${{ inputs.hazelcast-version }}
      run: |
        ulimit -c unlimited
        sudo sh -c "echo 'core' > /proc/sys/kernel/core_pattern"
        sudo sh -c "echo '1' > /proc/sys/kernel/core_uses_pid"
        ./scripts/test-unix.sh
      working-directory: ${{ inputs.working-directory }}
