name: Test Server Backwards Compatibility with Java Thin Client

on:
  workflow_dispatch:
    inputs:
      organization_name:
        description: Name of the organization to build JARs from. If you want to run the tests with the JARs from your fork, set this to your username.
        required: true
        default: hazelcast
      branch_name:
        description: Name of the branch to build JARs from
        required: true
        default: master
      client_branch_name:
        description: Name of the branch to test client from
        required: true
        default: master
jobs:
  upload_jars:
    name: Create and upload JARs
    runs-on: ubuntu-latest
    outputs:
      hz_server_version: ${{ steps.set_up_hz_server_version.outputs.HAZELCAST_SERVER_VERSION }}
    steps:
      - name: Checkout to scripts
        uses: actions/checkout@v4
        with:
          path: master
      - name: Read Java Config
        run: cat ${{ github.workspace }}/master/.github/java-config.env >> $GITHUB_ENV
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Checkout to test artifacts
        uses: actions/checkout@v2
        with:
          repository: hazelcast/private-test-artifacts
          path: certs
          ref: data
          token: ${{ secrets.GH_PAT }}
      - name: Checkout to Hazelcast Mono
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.organization_name }}/hazelcast-mono
          path: hazelcast-mono
          ref: ${{ github.event.inputs.branch_name }}
          token: ${{ secrets.GH_PAT }}
      - name: Set up HAZELCAST_SERVER_VERSION env
        id: set_up_hz_server_version
        run: echo "HAZELCAST_SERVER_VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )" >> "$GITHUB_OUTPUT"
        working-directory: hazelcast-mono
      - name: Build JARs
        run: mvn clean install -DskipTests=True
        working-directory: hazelcast-mono
      - name: Upload Hazelcast JAR
        uses: actions/upload-artifact@v2
        with:
          name: hazelcast
          path: hazelcast-mono/hazelcast/hazelcast/target/hazelcast-*[!s].jar
          retention-days: 1
      - name: Upload Hazelcast Enterprise JAR
        uses: actions/upload-artifact@v2
        with:
          name: hazelcast-enterprise
          path: hazelcast-mono/hazelcast-enterprise/target/hazelcast-enterprise-*[!s].jar
          retention-days: 1
  test_java_thin_clients:
    needs: [ upload_jars ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        server_kind: [ os, enterprise ]
        java: [ { version: 17, distribution: corretto },
                { version: 21, distribution: corretto },
                { version: 17, distribution: zulu },
                { version: 21, distribution: zulu },
                { version: 17, distribution: semeru },
                { version: 21, distribution: semeru },
                { version: 17, distribution: oracle },
                { version: 21, distribution: oracle },
                { version: 17, distribution: microsoft },
                { version: 21, distribution: microsoft }
        ]
    name: Test Java Thin client ${{ github.event.inputs.client_branch_name }} branch against ${{ matrix.server_kind }} server on JVM ${{ matrix.java.version }} ${{ matrix.java.distribution }}
    steps:
      - name: Checkout to scripts
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java.version }}
          distribution: ${{ matrix.java.distribution }}

      - name: Checkout to ${{ github.event.inputs.client_branch_name }}
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.organization_name }}/hazelcast-java-client
          token: ${{ secrets.GH_PAT }}
          path: client
          ref: ${{ github.event.inputs.client_branch_name }}

      - name: Setup Local Maven Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Remove ${{ needs.upload_jars.outputs.hz_server_version }} dir from Local Maven Cache
        run: | 
          rm -r ~/.m2/repository/com/hazelcast/hazelcast/${{ needs.upload_jars.outputs.hz_server_version }}
          rm -r ~/.m2/repository/com/hazelcast/hazelcast-enterprise/${{ needs.upload_jars.outputs.hz_server_version }}

      - name: Download Hazelcast JAR
        uses: actions/download-artifact@v2
        with:
          name: hazelcast
          path: ~/.m2/repository/com/hazelcast/hazelcast/${{ needs.upload_jars.outputs.hz_server_version }}

      - name: Download Hazelcast Enterprise JAR
        if: ${{ matrix.server_kind == 'enterprise' }}
        uses: actions/download-artifact@v2
        with:
          name: hazelcast-enterprise
          path: ~/.m2/repository/com/hazelcast/hazelcast-enterprise/${{ needs.upload_jars.outputs.hz_server_version }}

      - name: Run non-enterprise tests
        run: |
          chmod +x mvnw
          ./mvnw -B -V -e install -Pintegration-tests -Djdk.version=${{ matrix.java.version }} -Dtest.hazelcast-server.version=${{ needs.upload_jars.outputs.hz_server_version }}
        working-directory: client/hazelcast-java-client

      - name: Run enterprise tests
        if: ${{ matrix.server_kind == 'enterprise' }}
        shell: bash -l {0}
        run: |
          chmod +x mvnw
          ./mvnw -B -V -e test -Pintegration-tests -Djdk.version=${{ matrix.java.version }} -Dtest.hazelcast-server.version=${{ needs.upload_jars.outputs.hz_server_version }}
        working-directory: client/hazelcast-enterprise-java-client

