name: Cloud test with csharp client

on:
  workflow_dispatch:
    inputs:
      organization_name:
        description: Default is hazelcast, but if you would like to run the workflow with your forked repo, set your github username
        required: true
        default: hazelcast
      branch_name:
        description: Name of the branch to test client from
        required: true
        default: master
      base_url:
        description: Base url of the cloud env. I.e https://api.dev.viridian.hazelcast.cloud
        required: true
        default: https://api.dev.viridian.hazelcast.cloud
      hzVersion:
        description: Version of hazelcast
        required: true

jobs:
  test_cloud_csharp:
    runs-on: ubuntu-latest
    name: Cloud tests with csharp
    steps:
      - name: Checkout to scripts
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'temurin'
          
      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            2.1.x
            3.1.x
            5.0.x
            6.0.x
            7.0.x
          
      - name: Checkout to ${{ github.event.inputs.branch_name }}
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.organization_name }}/hazelcast-csharp-client
          path: client
          ref: ${{ github.event.inputs.branch_name }}    
         
      - name: Start RC for Viridian
        env:
          baseUrl: ${{ github.event.inputs.base_url }}
          apiKey: ${{ secrets.APIKEY_VIRIDIAN }}
          apiSecret: ${{ secrets.APISECRET_VIRIDIAN }}
          hzVersion: ${{ github.event.inputs.hzVersion }}
        run: |
          python start_remote_controller.py &> rc.log &
          sleep 30

      - name: Update submodules
        run: |
            git submodule update --init
        working-directory: client
        
      - name: Build
        shell: pwsh
        run: ./hz.ps1 -localRestore build
        working-directory: client      

      - name: Run cloud tests
        shell: pwsh
        run: ./hz.ps1 test -tf "test == /Hazelcast.Tests.Cloud.ServerlessCloudTests.TestCloud/" ${{ secrets.GH_PAT }}
        working-directory: client
        env:
          HAZELCAST_SERVER_VERSION: ${{ matrix.version }}   

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: rc
          path: rc.log
